name: Prepare Release Docs

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.2, v1.0.3.rc-0)"
        required: true
      body:
        description: "Release notes in [Type] - Message format"
        required: true
      date:
        description: "Release date (e.g., 2025-05-25)"
        required: true

jobs:
  update-release-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set pull strategy to merge
        run: git config --global pull.rebase false

      - name: Pull latest changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull origin main

      - name: Run release docs updater
        env:
          VERSION: ${{ github.event.inputs.version }}
          DATE: ${{ github.event.inputs.date }}
          BODY: ${{ github.event.inputs.body }}
        run: node dev/update-release-docs.js

      - name: Create release branch
        run: |
          BRANCH_NAME=release/update-docs-${{ github.run_id }}
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: update release-docs.json for ${{ github.event.inputs.version }}" || echo "Nothing to commit"

      - name: Push to new branch
        run: |
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: update release-docs.json for ${{ github.event.inputs.version }}"
          body: |
            Automated pull request to update release-docs.json for version `${{ github.event.inputs.version }}`

            **Date**: ${{ github.event.inputs.date }}
            **Notes**:
            ${{ github.event.inputs.body }}
          branch: ${{ env.BRANCH_NAME }}
          base: main
